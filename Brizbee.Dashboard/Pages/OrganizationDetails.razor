@page "/organization-details"

@using Brizbee.Dashboard.Services
@using Brizbee.Common.Models

@inject NavigationManager NavigationManager
@inject LocalStorageService localStorageService
@inject SharedService sharedService
@inject UserService userService
@inject OrganizationService organizationService
@inject DialogService dialogService
@inject IJSRuntime JSRuntime

@implements IDisposable

<nav class="navbar navbar-default navbar-fixed-top">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <NavLink class="navbar-brand" href="kiosk/status">
                <img alt="BRIZBEE Logo" src="/icon-32x32.png">
            </NavLink>
        </div>
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                <li>
                    <NavLink class="nav-link" href="kiosk/status">
                        <i class="far fa-id-badge fa-padded" aria-hidden="true"></i> Kiosk
                    </NavLink>
                </li>
                @if (currentUser.Role == "Administrator")
                {
                    <li>
                        <NavLink class="nav-link" href="punches">
                            <i class="far fa-clock fa-padded" aria-hidden="true"></i> Time
                        </NavLink>
                    </li>
                    <li>
                        <NavLink class="nav-link" href="customers">
                            <i class="fas fa-truck fa-padded" aria-hidden="true"></i> Projects and Customers
                        </NavLink>
                    </li>
                    <li>
                        <NavLink class="nav-link" href="reports">
                            <i class="fas fa-chart-line fa-padded" aria-hidden="true"></i> Reports
                        </NavLink>
                    </li>
                    <li>
                        <NavLink class="nav-link" href="users">
                            <i class="fas fa-users fa-padded" aria-hidden="true"></i> Users
                        </NavLink>
                    </li>
                }
            </ul>
            <ul class="nav navbar-nav navbar-right">
                <li class="navbar-phone"><a href="tel:1-888-930-3044">Punch In or Out @@ 1-888-930-3044</a></li>
                <li class="dropdown">
                    <a href="javascript:void(0)" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">@currentUser.Name <span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        <li>
                            <NavLink class="nav-link" href="user-details">
                                Account Details
                            </NavLink>
                        </li>
                        @if (currentUser.Role == "Administrator")
                        {
                            <li role="separator" class="divider"></li>
                            <li>
                                <NavLink class="nav-link" href="organization-details">
                                    Organization Settings
                                </NavLink>
                            </li>
                        }
                        <li role="separator" class="divider"></li>
                        <li><a href="javascript:void(0)" @onclick="SignOutClicked">Sign Out</a></li>
                    </ul>
                </li>
            </ul>
        </div>
    </div>
</nav>

<div class="container-fluid fadeIn">
    <div class="row">
        <div class="col-md-4 col-md-offset-4 col-sm-12">
            <div class="panel panel-default">
                <div class="panel-heading">Organization Details</div>
                <div class="panel-body">
                    <EditForm Model="@organization" OnValidSubmit="SaveOrganization" class="form" autocomplete="off">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group">
                            <label for="organization_name">Name</label>
                            <InputText id="organization_name" @bind-Value="organization.Name" class="form-control" disabled="@working" />
                        </div>

                        <div class="form-group">
                            <label for="organization_minutes_format">Time Format</label>
                            <InputSelect id="organization_minutes_format" @bind-Value="organization.MinutesFormat" class="form-control" disabled="@working">
                                <option value="minutes">Minutes &ndash; 2:14</option>
                                <option value="decimal">Decimal &ndash; 2.23</option>
                            </InputSelect>
                        </div>

                        <div class="form-group">
                            <label for="organization_code">Organization Code (for login via Pin)</label>
                            <InputText id="organization_code" @bind-Value="organization.Code" class="form-control" disabled="@working" />
                            <p class="help-block">This 4+ digit code is public and shared throughout your organization. Users can login via Organization Code and User Pin on the Web, mobile app, and BRIZBEE hotline.</p>
                        </div>

                        <div class="form-group">
                            <label for="organization_groups">Tasks Groups</label>
                            <InputText id="organization_groups" @bind-Value="organization.Groups" class="form-control" disabled="@working" />
                            <p class="">Comma-separated list of groups by which to organize Tasks</p>
                        </div>

                        <button class="btn btn-primary" type="submit" disabled="@working">Save Changes</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4 col-md-offset-4 col-sm-12">
            <div class="panel panel-default">
                <div class="panel-heading">Billing Information</div>
                <div class="panel-body">
                    <form id="payment-form" autocomplete="off">
                        @if (!string.IsNullOrEmpty(organization.StripeSourceId))
                        {
                            <div class="form-group" style="margin-bottom: 2em;">
                                <label for="card-element">
                                    Current Card
                                </label>
                                <p>@organization.StripeSourceCardBrand ending in @organization.StripeSourceCardLast4 expires @organization.StripeSourceCardExpirationMonth &ndash; @organization.StripeSourceCardExpirationYear</p>
                            </div>
                        }

                        <div class="form-group" style="margin-bottom: 2em;">
                            <label for="card-element">
                                Update Credit or Debit Card
                            </label>
                            <div id="card-element">
                                <!-- A Stripe Element will be inserted here. -->
                            </div>
                            <!-- Used to display Element errors. -->
                            <div id="card-errors" role="alert"></div>
                        </div>

                        <button class="btn btn-default">Save Changes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [CascadingParameter]
    public EventCallback SignOutClicked { get; set; }

    private bool working = false;
    private User currentUser;
    private Organization organization = new Organization();

    private static Action<string> action;

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        // Subscribe to the events
        sharedService.OnChange += StateHasChanged;

        currentUser = sharedService.CurrentUser;

        organization = await organizationService.GetOrganizationByIdAsync(currentUser.OrganizationId);

        action = UpdateSourceId;

        dialogService.OnOpen += Open;
        dialogService.OnClose += Close;
    }

    public void Dispose()
    {
        // Unsubscribe to the events
        sharedService.OnChange -= StateHasChanged;
    }

    protected override async System.Threading.Tasks.Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Prepare Stripe form
            await JSRuntime.InvokeVoidAsync("setupStripe");
        }
    }

    private void Open(string title, Type type, Dictionary<string, object> parameters, DialogOptions options)
    {
        Console.WriteLine("Dialog opened");
    }

    private async void Close(dynamic result)
    {
        Console.WriteLine($"Dialog closed with result: {result}");
    }

    private async System.Threading.Tasks.Task SaveOrganization()
    {
        // Confirm that the user wants to make the change.
        var confirm = await dialogService.Confirm(
            "Are you sure you want to save the changes?",
            "Confirm",
            new ConfirmOptions() { Width = "600px", CancelButtonText = "Cancel", OkButtonText = "OK" });
        if (confirm != true)
            return;

        // Save the organization on the server and close the dialog.
        await organizationService.SaveOrganizationAsync(organization);
    }

    [JSInvokable]
    public static void InvokeUpdateSourceId(string sourceId)
    {
        action.Invoke(sourceId);
    }

    public async void UpdateSourceId(string sourceId)
    {
        await organizationService.SaveSourceIdAsync(currentUser.OrganizationId, sourceId);
        StateHasChanged();
    }
}