@page "/inventory/consumption"

@using Brizbee.Dashboard.Services
@using Brizbee.Common.Models

@inject NavigationManager NavigationManager
@inject LocalStorageService localStorageService
@inject SharedService sharedService
@inject UserService userService
@inject CommitService commitService
@inject PunchService punchService
@inject RateService rateService
@inject QBDInventoryConsumptionService qbdInventoryConsumptionService
@inject DialogService dialogService

@implements IDisposable

<nav class="navbar navbar-default navbar-fixed-top">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <NavLink class="navbar-brand" href="kiosk/status">
                <img alt="BRIZBEE Logo" src="/icon-32x32.png">
            </NavLink>
        </div>
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                <li>
                    <NavLink class="nav-link" href="kiosk/status">
                        <i class="far fa-id-badge fa-padded" aria-hidden="true"></i> Kiosk
                    </NavLink>
                </li>
                @if (currentUser.Role == "Administrator")
                {
                    <li>
                        <NavLink class="nav-link" href="punches">
                            <i class="far fa-clock fa-padded" aria-hidden="true"></i> Time
                        </NavLink>
                    </li>
                    <li>
                        <NavLink class="nav-link" href="customers">
                            <i class="fas fa-truck fa-padded" aria-hidden="true"></i> Projects and Customers
                        </NavLink>
                    </li>
                    <li class="active">
                        <NavLink class="nav-link" href="inventory/consumption">
                            <i class="fas fa-boxes fa-padded" aria-hidden="true"></i> Inventory <span class="sr-only">(current)</span>
                        </NavLink>
                    </li>
                    <li>
                        <NavLink class="nav-link" href="reports">
                            <i class="fas fa-chart-line fa-padded" aria-hidden="true"></i> Reports
                        </NavLink>
                    </li>
                    <li>
                        <NavLink class="nav-link" href="users">
                            <i class="fas fa-users fa-padded" aria-hidden="true"></i> Users
                        </NavLink>
                    </li>
                }
            </ul>
            <ul class="nav navbar-nav navbar-right">
                <li class="navbar-phone"><a href="tel:1-888-930-3044">Punch In or Out @@ 1-888-930-3044</a></li>
                <li class="dropdown">
                    <a href="javascript:void(0)" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">@currentUser.Name <span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        <li>
                            <NavLink class="nav-link" href="user-details">
                                Account Details
                            </NavLink>
                        </li>
                        @if (currentUser.Role == "Administrator")
                        {
                            <li role="separator" class="divider"></li>
                            <li>
                                <NavLink class="nav-link" href="organization-details">
                                    Organization Settings
                                </NavLink>
                            </li>
                        }
                        <li role="separator" class="divider"></li>
                        <li><a href="javascript:void(0)" @onclick="SignOutClicked">Sign Out</a></li>
                    </ul>
                </li>
            </ul>
        </div>
    </div>
</nav>

<div class="container-fluid fadeIn">
    <ul class="nav nav-pills">
        <li role="presentation" class="active"><NavLink href="inventory/consumption">Consumption</NavLink></li>
        <li role="presentation"><NavLink href="inventory/consumption-syncs">Consumption Syncs</NavLink></li>
        <li role="presentation"><NavLink href="inventory/items">Items</NavLink></li>
        <li role="presentation"><NavLink href="inventory/item-syncs">Item Syncs</NavLink></li>
    </ul>

    <hr />

    <!--Toolbar-->
    <div class="row row-toolbar">
        <div class="col-md-6">
            <div class="btn-toolbar" role="toolbar">
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-default" @onclick="@(e => RefreshConsumptions())"><i class="fas fa-sync-alt" aria-hidden="true"></i></button>
                </div>
            </div>
        </div>
    </div>

    <!--List of Consumptions-->
    <table class="table table-bordered">
        <thead>
            <tr>
                <th style="width: 10%;">
                    <a href="javascript:void(0)" @onclick="@(e => ChangeSortBy("QBDInventoryConsumptions/CreatedAt"))">
                        Created
                        @if (sortBy == "QBDInventoryConsumptions/CreatedAt" && sortDirection == "ASC")
                        {
                            <span class="fa fa-caret-up"></span>
                        }
                        else if (sortBy == "QBDInventoryConsumptions/CreatedAt" && sortDirection == "DESC")
                        {
                            <span class="fa fa-caret-down"></span>
                        }
                    </a>
                </th>
                <th style="width: 11%;">
                    <a href="javascript:void(0)" @onclick="@(e => ChangeSortBy("QBDInventoryItems/Name"))">
                        Item
                        @if (sortBy == "QBDInventoryItems/Name" && sortDirection == "ASC")
                        {
                            <span class="fa fa-caret-up"></span>
                        }
                        else if (sortBy == "QBDInventoryItems/Name" && sortDirection == "DESC")
                        {
                            <span class="fa fa-caret-down"></span>
                        }
                    </a>
                </th>
                <th style="width: 5%;">
                    <a href="javascript:void(0)" @onclick="@(e => ChangeSortBy("QBDInventoryConsumptions/Quantity"))">
                        Quantity
                        @if (sortBy == "QBDInventoryConsumptions/Quantity" && sortDirection == "ASC")
                        {
                            <span class="fa fa-caret-up"></span>
                        }
                        else if (sortBy == "QBDInventoryConsumptions/Quantity" && sortDirection == "DESC")
                        {
                            <span class="fa fa-caret-down"></span>
                        }
                    </a>
                </th>
                <th style="width: 11%;">
                    <a href="javascript:void(0)" @onclick="@(e => ChangeSortBy("Users/Name"))">
                        User
                        @if (sortBy == "Users/Name" && sortDirection == "ASC")
                        {
                            <span class="fa fa-caret-up"></span>
                        }
                        else if (sortBy == "Users/Name" && sortDirection == "DESC")
                        {
                            <span class="fa fa-caret-down"></span>
                        }
                    </a>
                </th>
                <th style="width: 5%;">
                    <a href="javascript:void(0)" @onclick="@(e => ChangeSortBy("Customers/Number"))">
                        Customer #
                        @if (sortBy == "Customers/Number" && sortDirection == "ASC")
                        {
                            <span class="fa fa-caret-up"></span>
                        }
                        else if (sortBy == "Customers/Number" && sortDirection == "DESC")
                        {
                            <span class="fa fa-caret-down"></span>
                        }
                    </a>
                </th>
                <th style="width: 16%;">
                    <a href="javascript:void(0)" @onclick="@(e => ChangeSortBy("Customers/Name"))">
                        Customer
                        @if (sortBy == "Customers/Name" && sortDirection == "ASC")
                        {
                            <span class="fa fa-caret-up"></span>
                        }
                        else if (sortBy == "Customers/Name" && sortDirection == "DESC")
                        {
                            <span class="fa fa-caret-down"></span>
                        }
                    </a>
                </th>
                <th style="width: 5%;">
                    <a href="javascript:void(0)" @onclick="@(e => ChangeSortBy("Jobs/Number"))">
                        Project #
                        @if (sortBy == "Jobs/Number" && sortDirection == "ASC")
                        {
                            <span class="fa fa-caret-up"></span>
                        }
                        else if (sortBy == "Jobs/Number" && sortDirection == "DESC")
                        {
                            <span class="fa fa-caret-down"></span>
                        }
                    </a>
                </th>
                <th style="width: 16%;">
                    <a href="javascript:void(0)" @onclick="@(e => ChangeSortBy("Jobs/Name"))">
                        Project
                        @if (sortBy == "Jobs/Name" && sortDirection == "ASC")
                        {
                            <span class="fa fa-caret-up"></span>
                        }
                        else if (sortBy == "Jobs/Name" && sortDirection == "DESC")
                        {
                            <span class="fa fa-caret-down"></span>
                        }
                    </a>
                </th>
                <th style="width: 5%;">
                    <a href="javascript:void(0)" @onclick="@(e => ChangeSortBy("Tasks/Number"))">
                        Task #
                        @if (sortBy == "Tasks/Number" && sortDirection == "ASC")
                        {
                            <span class="fa fa-caret-up"></span>
                        }
                        else if (sortBy == "Tasks/Number" && sortDirection == "DESC")
                        {
                            <span class="fa fa-caret-down"></span>
                        }
                    </a>
                </th>
                <th style="width: 16%;">
                    <a href="javascript:void(0)" @onclick="@(e => ChangeSortBy("Tasks/Name"))">
                        Task
                        @if (sortBy == "Tasks/Name" && sortDirection == "ASC")
                        {
                            <span class="fa fa-caret-up"></span>
                        }
                        else if (sortBy == "Tasks/Name" && sortDirection == "DESC")
                        {
                            <span class="fa fa-caret-down"></span>
                        }
                    </a>
                </th>
                <th>
                    Synced?
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var consumption in consumptions)
            {
                <tr class="fadeIn selectable">
                    <td><a href="javascript:void(0)">@TimeZoneInfo.ConvertTimeFromUtc(consumption.CreatedAt, systemTimeZone).ToString("MM/dd/yyyy h:mm tt")</a></td>
                    <td><a href="javascript:void(0)">@consumption.QBDInventoryItem.Name</a></td>
                    <td><a href="javascript:void(0)">@consumption.Quantity</a></td>
                    <td><a href="javascript:void(0)">@consumption.CreatedByUser.Name</a></td>
                    <td><a href="javascript:void(0)">@consumption.Task.Job.Customer.Number</a></td>
                    <td><a href="javascript:void(0)">@consumption.Task.Job.Customer.Name</a></td>
                    <td><a href="javascript:void(0)">@consumption.Task.Job.Number</a></td>
                    <td><a href="javascript:void(0)">@consumption.Task.Job.Name</a></td>
                    <td><a href="javascript:void(0)">@consumption.Task.Number</a></td>
                    <td><a href="javascript:void(0)">@consumption.Task.Name</a></td>
                    <td><a href="javascript:void(0)">@consumption.QBDInventoryConsumptionSyncId.HasValue</a></td>
                </tr>
            }
            @if (working)
            {
                <tr class="fadeIn">
                    <td colspan="10"><i class="fa fa-spinner fa-spin fa-fw"></i></td>
                </tr>
            }
            @if (!working && consumptions.Count == 0)
            {
                <tr class="fadeIn">
                    <td colspan="10">You haven't consumed any inventory items</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="row">
        <div class="col-md-6">
            @if (consumptionsCount > pageSize)
            {
                <div class="pull-left" style="margin-right: 1rem;">
                    <button class="btn btn-sm btn-default pull-left" @onclick="PreviousPage"><i class="fa fa-arrow-left" aria-hidden="true"></i></button>
                    <button class="btn btn-sm btn-default pull-left" @onclick="NextPage"><i class="fa fa-arrow-right" aria-hidden="true"></i></button>
                </div>
            }

            @if (consumptionsCount > 0 && !working)
            {
                <p class="form-control-static pull-left">@(consumptionsPageStart + 1) to @(consumptionsPageStart + pageSize < consumptionsCount ? consumptionsPageStart + pageSize : consumptionsCount) of @consumptionsCount</p>
            }
        </div>
    </div>
</div>

@code {
    [CascadingParameter]
    public EventCallback SignOutClicked { get; set; }

    private bool working = false;
    private User currentUser;
    private TimeZoneInfo systemTimeZone = TimeZoneInfo.Local;
    private List<QBDInventoryConsumption> consumptions = new List<QBDInventoryConsumption>();
    private string sortBy = "QBDInventoryConsumptions/CreatedAt";
    private string sortDirection = "DESC";
    private int pageSize = 20;
    private int skip = 0;
    private long consumptionsCount = 0;
    private int consumptionsPageStart = 0;

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        // Subscribe to the events
        sharedService.OnChange += StateHasChanged;

        currentUser = sharedService.CurrentUser;

        await RefreshConsumptions();

        dialogService.OnOpen += Open;
        dialogService.OnClose += Close;
    }

    public void Dispose()
    {
        // Unsubscribe to the events
        sharedService.OnChange -= StateHasChanged;
    }

    private async void NextPage(MouseEventArgs e)
    {
        consumptionsPageStart = consumptionsPageStart + pageSize;
        skip = consumptionsPageStart;
        await RefreshConsumptions();
    }

    private async void PreviousPage(MouseEventArgs e)
    {
        consumptionsPageStart = consumptionsPageStart - pageSize;
        skip = consumptionsPageStart;
        await RefreshConsumptions();
    }

    private void Open(string title, Type type, Dictionary<string, object> parameters, DialogOptions options)
    {
        Console.WriteLine("Dialog opened");
    }

    private async void Close(dynamic result)
    {
        Console.WriteLine($"Dialog closed with result: {result}");
        await RefreshConsumptions();
    }

    private async System.Threading.Tasks.Task RefreshConsumptions()
    {
        working = true;
        consumptions.Clear();
        var result = await qbdInventoryConsumptionService.GetQBDInventoryConsumptionsAsync(pageSize, skip, sortBy, sortDirection);
        consumptions = result.Item1;
        consumptionsCount = result.Item2.GetValueOrDefault();
        working = false;
        StateHasChanged();
    }

    private async void ChangeSortBy(string column)
    {
        sortBy = column;

        if (sortDirection == "ASC")
        {
            sortDirection = "DESC";
        }
        else
        {
            sortDirection = "ASC";
        }

        await RefreshConsumptions();
    }
}