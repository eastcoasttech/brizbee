@page "/kiosk/in/tasknumber"

@using System.ComponentModel.DataAnnotations
@using Brizbee.Dashboard.Services
@using Brizbee.Common.Models

@inject NavigationManager NavigationManager
@inject SharedService sharedService
@inject TaskService taskService
@inject UserService userService

<nav class="navbar navbar-default navbar-fixed-top">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <NavLink class="navbar-brand" href="kiosk/status">
                <img alt="BRIZBEE Logo" src="/icon-32x32.png">
            </NavLink>
        </div>
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                <li class="active">
                    <NavLink class="nav-link" href="kiosk/status">
                        <i class="far fa-id-badge fa-padded" aria-hidden="true"></i> Kiosk <span class="sr-only">(current)</span>
                    </NavLink>
                </li>
            </ul>
            <ul class="nav navbar-nav navbar-right">
                <li class="navbar-phone"><a href="tel:1-888-930-3044">Punch In or Out @@ 1-888-930-3044</a></li>
                <li class="dropdown">
                    <a href="javascript:void(0)" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">@currentUser.Name <span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        <li><a href="javascript:void(0)">Account Details</a></li>
                        @if (currentUser.Role == "Administrator")
                        {
                            <li><a href="javascript:void(0)">Organization Details</a></li>
                        }
                        <li role="separator" class="divider"></li>
                        <li><a href="javascript:void(0)" @onclick="SignOutClicked">Sign Out</a></li>
                    </ul>
                </li>
            </ul>
        </div>
    </div>
</nav>

<div class="container-fluid fadeIn">
    <div class="row">
        <div class="col-md-4 col-md-offset-4 col-sm-12 col-xs-12">
            <div class="panel panel-default panel-kiosk">
                <div class="panel-heading"><h2>What is your task number?</h2></div>
                <div class="panel-body">
                    <EditForm Model="@model" OnValidSubmit="Continue" class="form" autocomplete="off">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group">
                            <InputText @bind-Value="model.Number" class="form-control" id="task_number" placeholder="Task Number" disabled="@working" autocomplete="off" />
                        </div>

                        <button type="submit" class="btn btn-block btn-lg btn-primary" disabled="@working">Continue</button>
                        <NavLink class="btn btn-block btn-lg btn-default" href="kiosk/status" disabled="@working">
                            Cancel
                        </NavLink>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [CascadingParameter]
    public EventCallback SignOutClicked { get; set; }

    private bool working = false;
    private User currentUser;
    private TaskNumberModel model = new TaskNumberModel();

    protected override void OnInitialized()
    {
        working = true;
        currentUser = sharedService.CurrentUser;
        working = false;
    }

    private async System.Threading.Tasks.Task Continue()
    {
        working = true;

        var found = await taskService.SearchTasksAsync(model.Number);

        if (found != null)
        {
            sharedService.AttemptedTask = found;
            NavigationManager.NavigateTo("kiosk/in/confirm");
        }
        else
        {
            working = false;
            Console.WriteLine("Not found!");
        }
    }

    class TaskNumberModel
    {
        [Required(ErrorMessage = "Your task number is required. The task number must match exactly, including leading-zeros.")]
        public string Number { get; set; }
    }
}